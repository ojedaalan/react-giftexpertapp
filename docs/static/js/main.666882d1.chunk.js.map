{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCnCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAkBZM,GAlBY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,mDAAf,UACM,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCLDO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECFyB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAlBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAd,GAEFe,YAAY,WAERH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAGf,UAIV,CAACpB,IAEEqB,EDzByBK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGpB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAGZ,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,aAEKA,IAAOA,GACFA,GAFEA,EAAIC,aEqBxBgB,EAtCO,WAElB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAKA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BACQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAGIA,SAAYA,GADJA,YCjBpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.666882d1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    //console.log(inputValue);\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>1){\r\n            setcategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n       // console.log('Submit hecho')\r\n       \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setcategories: PropTypes.func.isRequired\r\n\r\n}\r\n","export const getGift = async(category) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=JxbPTytSDMG3Cw4X407YOqLxl4cM1k24`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n   // console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInLeft\">\r\n              <img src={url} alt={title} />\r\n              <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ( {category} ) => {\r\n\r\n   const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__zoomIn\"> { category } </h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (\r\n                       <GifGridItem \r\n                            key= { img.id }\r\n                            img= { img }\r\n                            { ...img }\r\n                       />\r\n                    ))\r\n                }\r\n            \r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGift } from \"../helpers/getGift\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGift(category)\r\n            .then(img => {\r\n\r\n                setTimeout( () => {\r\n                    \r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n\r\n                },2000)\r\n\r\n            })\r\n\r\n    } , [category] );\r\n\r\n    return state; // data:[], loading: true;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n    // const handleAdd = () => {\r\n    //     ;\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setcategories={ setcategories }/>\r\n\r\n            <hr></hr>\r\n\r\n\r\n            <ol>{\r\n                    categories.map( category => \r\n                        \r\n                        <GiftGrid\r\n                            \r\n                            key = { category }\r\n                            category = {category}\r\n                            \r\n                        />\r\n                    )\r\n             }\r\n            </ol>\r\n        </>\r\n\r\n)\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\n\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// GiftExpertApp \n// <h2>GiftExpertApp</h2>\n<hr></hr>"],"sourceRoot":""}